server:
  port: 8080

spring:
  profiles:
    active: dev


  rabbitmq:
    addresses: 127.0.0.1
    username: guest
    password: guest
    port: 5672
    publisher-confirms: true
    publisher-returns: true
    template:
      mandatory: true

#publisher-confirm： 开启消息到达exchange的回调，发送成功失败都会触发回调
#publisher-returns: 开启消息从exhcange路由到queue的回调，只有路由失败时才会触发回调

#mandatory: 为true时，如果exchange根据routingKey将消息路由到queue时找不到匹配的queue，
#触发return回调，为false时，exchange直接丢弃消息。


    listener:
      simple:
        acknowledge-mode: manual  # 手动ack
        prefetch: 5

#acknowledge-mode: manual就表示开启手动ack，该配置项的其他两个值分别是none和auto
#auto：消费者根据程序执行正常或者抛出异常来决定是提交ack或者nack，不要把none和auto搞混了
#manual: 手动ack，用户必须手动提交ack或者nack
#none: 没有ack机制
        retry:
          enabled: true
          max-attempts: 5
          max-interval: 4000ms # 重试最大间隔时间
          initial-interval: 2000ms  # 重试初始间隔时间
          multiplier: 2 # 间隔时间乘子，间隔时间*乘子=下一次的间隔时间，最大不能超过设置的最大间隔时间




  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost:3306/test?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    druid:
      initial-size: 1
      max-active: 15
      min-idle: 1
      query-timeout: 5000


  redis:
    host: 127.0.0.1
    port: 6379
    timeout: 5000ms
    jedis:
      pool:
        max-active: 10
        min-idle: 1
        max-wait: -1ms
        max-idle: 2



mybatis:
  mapper-locations: classpath*:mapper/*.xml
  configuration: # 配置懒加载机制
    lazy-loading-enabled: true
    aggressive-lazy-loading: false
    log-prefix: dao.

logging:
  config: classpath:logback.xml
  level:
    com:
      boot:
        boot: DEBUG

fdfs:
  so-timeout: 30000
  connect-timeout: 20000
  thumb-image:             #缩略图生成参数
    width: 150
    height: 150
  tracker-list:            #TrackerList参数,支持多个
    - 192.168.93.129:22122

